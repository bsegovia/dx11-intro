static const char soundtrack_shader_h[] =
"static const float PI=3.14159265358979323846f;\n"
"static const float TAU=2.f*PI;\n"
"\n"
"RWStructuredBuffer<int> g_soundTrack : register(u0);\n"
"\n"
"\n"
"float Envelope(float time, float decay) {\n"
"  return exp2(-time * (5.0 / decay));\n"
"}\n"
"\n"
"float Envelope(float time, float attack, float decay) {\n"
"  if (time < attack)\n"
"    return time/attack;\n"
"  time -= attack;\n"
"  return Envelope(time, decay);\n"
"}\n"
"\n"
"float NoteToHz(float n) { return 440.0*pow(2.0, (n-69.0)/12.0); }\n"
"float Tri(float t) { return abs(frac(t) * 4.0 - 2.0) - 1.0; }\n"
"float Saw(float t) { return frac(t) * 2.0 - 1.0; }\n"
"float Cos(float t) { return cos(t * radians(360.0)); }\n"
"float Square(float t) { return step(frac(t), 0.5) * 2.0 - 1.0; }\n"
"\n"
"float4 Cos4(float4 x) {\n"
"  x = abs(frac(x) * 2.0 - 1.0);\n"
"  float4 x2 = x*x;\n"
"  return x2 * 6.0 - x2*x * 4.0 - 1.0;\n"
"}\n"
"float4 Saw4(float4 x) { return frac(x) * 2.0 - 1.0; }\n"
"\n"
"\n"
"float Hash(float p) {\n"
"  float2 p2 = frac(float2(p * 5.3983, p * 5.4427));\n"
"  p2 += dot(p2.yx, p2.xy + float2(21.5351, 14.3137));\n"
"  return frac(p2.x * p2.y * 95.4337);\n"
"}\n"
"\n"
"float Noise(float x) {\n"
"  return Hash(floor(x * 32.0)) * 2.0 - 1.0;\n"
"}\n"
"\n"
"float SmoothNoise(float t) {\n"
"  float noiset = t * 32.0;\n"
"  float tfloor = floor(noiset);\n"
"  float ffrac = frac(noiset);\n"
"\n"
"  float n0 = Hash(tfloor);\n"
"  float n1 = Hash(tfloor + 1.0);\n"
"  float blend = ffrac*ffrac*(3.0 - 2.0*ffrac);\n"
"  return lerp(n0, n1, blend) * 2.0 - 1.0;\n"
"}\n"
"\n"
"float FBM(float t, float persistence) {\n"
"  float result = 0.0;\n"
"\n"
"  float a = 1.0;\n"
"  float tot = 0.0;\n"
"  result += SmoothNoise(t) * a; tot += a; t *= 2.02; a *= persistence;\n"
"  result += SmoothNoise(t) * a; tot += a; t *= 2.02; a *= persistence;\n"
"  result += SmoothNoise(t) * a; tot += a; t *= 2.02; a *= persistence;\n"
"  result += SmoothNoise(t) * a; tot += a; t *= 2.02; a *= persistence;\n"
"  tot += a;\n"
"  return result / tot;\n"
"}\n"
"\n"
"float StepNoise(float t, float freq) {\n"
"  float noiset = t * freq;\n"
"  float tfloor = floor(noiset);\n"
"  float n = Hash(tfloor);\n"
"  return n * 2.0 - 1.0;\n"
"}\n"
"\n"
"float Cos4(float x, float4 phase, float4 freq, float4 amp) {\n"
"  return dot(Cos4((x+phase) * freq), amp);\n"
"}\n"
"\n"
"float Saw4(float x, float4 phase, float4 freq, float4 amp) {\n"
"  return dot(Saw4((x+phase) * freq), amp);\n"
"}\n"
"\n"
"\n"
"float2 GetTrack1Note(float x) {\n"
"  float2 r = float2(-1.f,-1.f);\n"
"  float t = 0.f;\n"
"\n"
"\n"
"    t+=float(24); if(x>t) r=float2(40,t);t+=float(28); if(x>t) r=float2(52,t);t+=float(24); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(50,t);t+=float(24); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(48,t);t+=float(24); if(x>t) r=float2(40,t);\n"
"  t+=float(26); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(46,t);t+=float(24); if(x>t) r=float2(40,t);t+=float(28); if(x>t) r=float2(40,t);t+=float(24); if(x>t) r=float2(47,t);t+=float(26); if(x>t) r=float2(48,t);t+=float(26); if(x>t) r=float2(40,t);t+=float(24); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(52,t);t+=float(26); if(x>t) r=float2(40,t);\n"
"  t+=float(24); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(50,t);t+=float(26); if(x>t) r=float2(40,t);t+=float(24); if(x>t) r=float2(40,t);t+=float(28); if(x>t) r=float2(48,t);t+=float(24); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(46,t);t+=float(126); if(x>t) r=float2(40,t);\n"
"  t+=float(26); if(x>t) r=float2(40,t);t+=float(24); if(x>t) r=float2(52,t);t+=float(28); if(x>t) r=float2(40,t);t+=float(24); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(50,t);t+=float(26); if(x>t) r=float2(40,t);t+=float(24); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(48,t);t+=float(26); if(x>t) r=float2(40,t);\n"
"  t+=float(24); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(46,t);t+=float(26); if(x>t) r=float2(40,t);t+=float(24); if(x>t) r=float2(40,t);t+=float(28); if(x>t) r=float2(47,t);t+=float(24); if(x>t) r=float2(48,t);t+=float(26); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(40,t);t+=float(24); if(x>t) r=float2(52,t);\n"
"  t+=float(26); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(40,t);t+=float(24); if(x>t) r=float2(50,t);t+=float(26); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(40,t);t+=float(24); if(x>t) r=float2(63,t);t+=float(14); if(x>t) r=float2(60,t);t+=float(14); if(x>t) r=float2(59,t);t+=float(12); if(x>t) r=float2(63,t);\n"
"  t+=float(12); if(x>t) r=float2(66,t);t+=float(12); if(x>t) r=float2(64,t);t+=float(14); if(x>t) r=float2(63,t);t+=float(12); if(x>t) r=float2(59,t);t+=float(14); if(x>t) r=float2(63,t);t+=float(12); if(x>t) r=float2(64,t);t+=float(12); if(x>t) r=float2(66,t);t+=float(12); if(x>t) r=float2(67,t);t+=float(14); if(x>t) r=float2(66,t);\n"
"  t+=float(14); if(x>t) r=float2(64,t);t+=float(12); if(x>t) r=float2(63,t);t+=float(12); if(x>t) r=float2(59,t);t+=float(12); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(52,t);t+=float(24); if(x>t) r=float2(40,t);t+=float(28); if(x>t) r=float2(40,t);t+=float(24); if(x>t) r=float2(50,t);\n"
"  t+=float(26); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(40,t);t+=float(24); if(x>t) r=float2(48,t);t+=float(26); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(40,t);t+=float(24); if(x>t) r=float2(46,t);t+=float(26); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(40,t);t+=float(24); if(x>t) r=float2(47,t);\n"
"  t+=float(28); if(x>t) r=float2(48,t);t+=float(24); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(52,t);t+=float(24); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(50,t);t+=float(24); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(40,t);\n"
"  t+=float(26); if(x>t) r=float2(48,t);t+=float(24); if(x>t) r=float2(40,t);t+=float(28); if(x>t) r=float2(40,t);t+=float(24); if(x>t) r=float2(46,t);t+=float(128); if(x>t) r=float2(40,t);t+=float(24); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(52,t);t+=float(26); if(x>t) r=float2(40,t);t+=float(24); if(x>t) r=float2(40,t);\n"
"  t+=float(28); if(x>t) r=float2(50,t);t+=float(24); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(48,t);t+=float(24); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(46,t);t+=float(24); if(x>t) r=float2(40,t);\n"
"  t+=float(26); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(47,t);t+=float(24); if(x>t) r=float2(48,t);t+=float(28); if(x>t) r=float2(40,t);t+=float(24); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(52,t);t+=float(26); if(x>t) r=float2(40,t);t+=float(24); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(50,t);\n"
"  t+=float(26); if(x>t) r=float2(40,t);t+=float(24); if(x>t) r=float2(40,t);t+=float(26); if(x>t) r=float2(67,t);t+=float(14); if(x>t) r=float2(64,t);t+=float(12); if(x>t) r=float2(59,t);t+=float(12); if(x>t) r=float2(64,t);t+=float(12); if(x>t) r=float2(67,t);t+=float(14); if(x>t) r=float2(64,t);t+=float(14); if(x>t) r=float2(67,t);t+=float(12); if(x>t) r=float2(71,t);t+=float(12); if(x>t) r=float2(67,t);t+=float(12); if(x>t) r=float2(64,t);\n"
"\n"
"  return r;\n"
"}\n"
"\n"
"\n"
"\n"
"\n"
"float2 GetNoteData( float2 vMidiResult, float fMidiTime )\n"
"{\n"
"  return float2( NoteToHz(vMidiResult.x), (fMidiTime - vMidiResult.y) * (1.0f / 200.0f) );\n"
"}\n"
"\n"
"float Test( float t )\n"
"{\n"
"  return Saw4(t, float4(0.0, 0.5, 0.1, 0.4), float4(1.0, 1.50, 2.00, -3.00), float4(1.0, 0.5, 0.25, 0.125));\n"
"}\n"
"\n"
"float Test2(float f)\n"
"{\n"
"  return Test(f) ;\n"
"}\n"
"float Instrument( float2 vFreqTime )\n"
"{\n"
"  return Test2( vFreqTime.x * vFreqTime.y ) * Envelope( vFreqTime.y, 0.01, 1.0 );\n"
"}\n"
"\n"
"float Track1Instrument( float2 vFreqTime )\n"
"{\n"
"  return Instrument( vFreqTime * float2(2.0, 1.0) ) * 0.75;\n"
"}\n"
"\n"
"float PlayMidi( float time ) {\n"
"  if(time < 0.0)\n"
"    return 0.0;\n"
"\n"
"  float fMidiTime = time * 200.0f;\n"
"\n"
"  float fResult = 0.0;\n"
"\n"
"  fResult += Track1Instrument( GetNoteData( GetTrack1Note(fMidiTime), fMidiTime ) );\n"
"\n"
"  return fResult;\n"
"}\n"
"float2 music(float t) { float x = 1.0*PlayMidi(t); return float2(x,x); }\n"
"\n"
"\n"
"\n"
"\n"
"\n"
"[numthreads(1024, 1, 1)]\n"
"void main(uint2 tid : SV_DispatchThreadID) {\n"
"  float2 flr = music(float(tid.x+tid.y*65536) / float(44100));\n"
"  int2 ilr = int2(32767.f*flr) & 0xffff;\n"
"  g_soundTrack[tid.x+tid.y*65536] = ilr.x | (ilr.y << 16);\n"
"}\n"
;

